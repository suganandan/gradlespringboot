plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.6'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'jacoco'
    id 'com.google.cloud.tools.jib' version '3.4.4'
    id 'org.sonarqube' version '3.3'
    id 'org.owasp.dependencycheck' version '8.4.0' // latest version as of 2025
}

group = 'com.sugan'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'
targetCompatibility = '17'


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    //implementation 'org.postgresql:postgresql:42.7.2'
    //runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'com.h2database:h2'
    implementation 'org.springframework.cloud:spring-cloud-gcp-starter-secretmanager:1.2.8.RELEASE'
    implementation 'org.springframework.cloud:spring-cloud-gcp-starter-sql-postgresql:1.2.8.RELEASE'
    implementation 'com.google.cloud.sql:postgres-socket-factory:1.19.0'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.5.0'
    implementation 'org.mapstruct:mapstruct:1.5.3.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'

    implementation 'org.springframework.boot:spring-boot-starter-cache'  // For Caching
    implementation 'com.github.ben-manes.caffeine:caffeine:3.1.6'  // Caffeine Cache
    implementation 'io.github.resilience4j:resilience4j-spring-boot2:1.7.1'  // Retry & Fallback
}

// Optional: configure it if you want custom report paths
dependencyCheck {
    failBuildOnCVSS = 7.0 // Fail if CVSS score > 7 (High)
    suppressionFile = 'dependency-check-suppression.xml' // If you have suppressions
    formats = ['HTML', 'JSON']
}


tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}
jacoco {
    toolVersion = "0.8.8"
}
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.required = true
        csv.required = false
        html.required = true
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

jib {
    to {
        image = "gcr.io/suga-new01/gradleservice:01"
    }
}
ext {
    set('springCloudGcpVersion', "5.4.3")
    set('springCloudVersion', "2023.0.2")
}
dependencyManagement {
    imports {
        mavenBom "com.google.cloud:spring-cloud-gcp-dependencies:${springCloudGcpVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}





