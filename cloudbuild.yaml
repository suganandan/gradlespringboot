steps:
  # Step 1: Use a custom builder image with Java 17 to build the application using Gradle
  - name: 'gcr.io/cloud-builders/gradle'
    args: ['build']
    env:
      - 'JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64'
      - 'GRADLE_OPTS=-Dorg.gradle.java.home=/usr/lib/jvm/java-17-openjdk-amd64'
    entrypoint: 'bash'
    script: |
      apt-get update && apt-get install -y openjdk-17-jdk
      gradle build

  # Step 2: Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/suga-new01/my-spring-boot-app', '.']

  # Step 3: Push the Docker image to Google Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/suga-new01/my-spring-boot-app']

  # Step 4: Deploy the image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args: ['run', 'deploy', 'my-spring-boot-app', '--image', 'gcr.io/$PROJECT_ID/my-spring-boot-app', '--platform', 'managed', '--region', 'us-central1', '--allow-unauthenticated']

images:
  - 'gcr.io/$PROJECT_ID/my-spring-boot-app'
