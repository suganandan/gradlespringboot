steps:
  # Step 1: Check out the repository
  - name: 'gcr.io/cloud-builders/git'
    entrypoint: 'git'
    args: ['clone', 'https://github.com/${_GITHUB_USERNAME}/${_REPOSITORY_NAME}.git']

  # Step 2: Set up the workspace
  - name: 'gcr.io/cloud-builders/git'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        cd ${_REPOSITORY_NAME}
        git checkout ${_BRANCH_NAME}

  # Step 3: Build the project using Gradle
  - name: 'gcr.io/cloud-builders/gradle'
    args: ['build']

  # Step 4: Build the Docker image using Gradle task
  - name: 'gcr.io/cloud-builders/gradle'
    args: ['buildDockerImage']

  # Step 5: Push the Docker image using Gradle task
  - name: 'gcr.io/cloud-builders/gradle'
    args: ['pushDockerImage']

  # Step 6: Deploy the Docker image to Google Cloud Run (or other service)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args: ['run', 'deploy', '${_SERVICE_NAME}', '--image', 'gcr.io/$PROJECT_ID/${_REPOSITORY_NAME}:${_VERSION}', '--platform', 'managed']

# Substitutions
substitutions:
  _GITHUB_USERNAME: 'suganandan'
  _REPOSITORY_NAME: 'gradlespringboot'
  _BRANCH_NAME: 'main' # or whatever branch you want to use
  _SERVICE_NAME: 'gradlespringboot'
  _VERSION: '0.0.1-SNAPSHOT' # or dynamic versioning

# Timeouts and other options
timeout: '900s'

# Artifacts
artifacts:
  images:
    - 'gcr.io/$PROJECT_ID/${_REPOSITORY_NAME}:${_VERSION}'
